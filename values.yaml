---
replicas:
  api: 1
  clock: 1
  front: 1
  worker: 1

lago_release: "0.22.1-beta"

api:
  port: 3000
  environment:
    - name: LAGO_API_URL
      value: "http://lago-api-svc.lago"
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: lago
          key: db_url
    - name: REDIS_URL # This is a self contained redis for this deployment. Better use a properly managed one
      value: "redis://lago-redis-svc.lago:6379"
    - name: RAILS_ENV
      value: "production"
    - name: LAGO_FRONT_URL
      value: "http://lago-front-svc.lago"
    # Used for session encryption
    - name: SECRET_KEY_BASE
      valueFrom:
        secretKeyRef:
          name: lago
          key: sessions_secret_key_base
    # Private key used for webhook signatures // private RSA key, base64 encoded
    - name: LAGO_RSA_PRIVATE_KEY
      valueFrom:
        secretKeyRef:
          name: lago
          key: lago_rsa_private_key
   # Encryption primary key used to secure sensitive values stored in the database
    - name: ENCRYPTION_PRIMARY_KEY
      valueFrom:
        secretKeyRef:
          name: lago
          key: encryption_primary_key
    # Encryption deterministic key used to secure sensitive values stored in the database
    - name: ENCRYPTION_DETERMINISTIC_KEY
      valueFrom:
        secretKeyRef:
          name: lago
          key: encryption_deterministic_key
    # Encryption key salt used to secure sensitive values stored in the database
    - name: ENCRYPTION_KEY_DERIVATION_SALT
      valueFrom:
        secretKeyRef:
          name: lago
          key: encryption_key_derivation_salt
    - name: LAGO_DISABLE_SEGMENT
      value: "true"
  resources:
    cpu: "100m"
    memory: "128M"

worker:
  environment:
    - name: LAGO_API_URL
      value: "http://lago-api-svc.lago"
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: lago
          key: db_url
    - name: REDIS_URL
      value: "redis://lago-redis-svc.lago:6379"
    - name: LAGO_FRONT_URL
      value: "http://lago-front-svc.lago"
    - name: RAILS_ENV
      value: "production"
    # Used for session encryption
    - name: SECRET_KEY_BASE
      valueFrom:
        secretKeyRef:
          name: lago
          key: sessions_secret_key_base
    # Private key used for webhook signatures
    - name: LAGO_RSA_PRIVATE_KEY
      valueFrom:
        secretKeyRef:
          name: lago
          key: lago_rsa_private_key
   # Encryption primary key used to secure sensitive values stored in the database
    - name: ENCRYPTION_PRIMARY_KEY
      valueFrom:
        secretKeyRef:
          name: lago
          key: encryption_primary_key
    # Encryption deterministic key used to secure sensitive values stored in the database
    - name: ENCRYPTION_DETERMINISTIC_KEY
      valueFrom:
        secretKeyRef:
          name: lago
          key: encryption_deterministic_key
    # Encryption key salt used to secure sensitive values stored in the database
    - name: ENCRYPTION_KEY_DERIVATION_SALT
      valueFrom:
        secretKeyRef:
          name: lago
          key: encryption_key_derivation_salt
    - name: LAGO_DISABLE_SEGMENT
      value: "true"
  resources:
    cpu: "100m"
    memory: "128M"

front:
  port: 80
  environment:
    - name: API_URL
      value: "https://lago.corp.yourcompany.com"
    - name: CODEGEN_API
      value: "https://lago.corp.yourcompany.com"
    - name: APP_ENV
      value: "production"
    - name: LAGO_DISABLE_SIGNUP
      value: "false"
  resources:
    cpu: "100m"
    memory: "128M"

clock:
  environment:
    - name: LAGO_API_URL
      value: "http://lago-api-svc.lago"
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: lago
          key: db_url
    - name: REDIS_URL
      value: "redis://lago-redis-svc.lago:6379"
    - name: RAILS_ENV
      value: "production"
    - name: LAGO_FRONT_URL
      value: "http://lago-front-svc.lago"
    # Used for session encryption
    - name: SECRET_KEY_BASE
      valueFrom:
        secretKeyRef:
          name: lago
          key: sessions_secret_key_base
    # Private key used for webhook signatures // private RSA key, base64 encoded
    - name: LAGO_RSA_PRIVATE_KEY
      valueFrom:
        secretKeyRef:
          name: lago
          key: lago_rsa_private_key
   # Encryption primary key used to secure sensitive values stored in the database
    - name: ENCRYPTION_PRIMARY_KEY
      valueFrom:
        secretKeyRef:
          name: lago
          key: encryption_primary_key
    # Encryption deterministic key used to secure sensitive values stored in the database
    - name: ENCRYPTION_DETERMINISTIC_KEY
      valueFrom:
        secretKeyRef:
          name: lago
          key: encryption_deterministic_key
    # Encryption key salt used to secure sensitive values stored in the database
    - name: ENCRYPTION_KEY_DERIVATION_SALT
      valueFrom:
        secretKeyRef:
          name: lago
          key: encryption_key_derivation_salt
  resources:
    cpu: "100m"
    memory: "128M"

ingress:
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      # CIS Nginx Configuration 5.1.2 - Ensure only whitelisted HTTP methods are allowed
      if ($request_method !~ ^(GET|HEAD|POST|DELETE|PUT|OPTIONS)$) { return 444; }

      # CIS Nginx Configuration 5.3 - Browser security headers
      add_header X-Frame-Options "SAMEORIGIN";
      add_header X-Content-Type-Options "nosniff";
      add_header X-Xss-Protection "1; mode=block";
      add_header Referrer-Policy "no-referrer";
      add_header Content-Security-Policy "default-src 'none'; script-src 'self';connect-src 'self';img-src 'self' data:; font-src 'self' fonts.gstatic.com; style-src 'self' 'unsafe-inline' fonts.googleapis.com;base-uri 'self';form-action 'self'; manifest-src 'self'";


    # Whitelist of IPs allowed to connect to the ingress (web UI)
    nginx.ingress.kubernetes.io/whitelist-source-range: 1.2.3.4/32
